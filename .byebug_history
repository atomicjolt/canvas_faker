c
exit
course_id
c
student["id"]
student[id]
student[:id]
student
c
student["id"]
student
c
exit
user_first_name
email
exit
email
c
full name
full_name = `#{user_first_name}#{user_last_name}`
full_name
c
user_first_name
c
a=@api.proxy('LIST_QUIZZES_IN_COURSE',{course_id: 966})
c
Faker::Pokemon.name
Faker::Pokemon.numbers
Faker::Pokemon.Numbers
Faker::Pokemon.constants
Faker::Pokemon
Faker.constants
Faker
exit
ARGV[1]
ARG[1]
exit
canvas_url
c
course["id"]
course.parsed_response["id"]
exit
course.parsed_response["id"]
course.parsed_response[:id]
course.parsed_response.id
course.parsed_response
course[:parsed_response]
course["parsed_response"]
course
exit
should_create_course?(existing_course_names, course_name)
index
c
LMS.constants
LMS
exit
courses[existing_course_names.find_index("#{course_name}")]
courses.parsed_response.find_index("Test Course")
courses.parsed_response.find_index("test Course")
courses.count
courses
courses[4]
courses[3]
courses[2]
courses[1]
courses[0]
courses.second
courses.first
courses
cou.class
cou= courses
courses.class
courses.find_index("Test Course")
courses.methods
courses.find_by(name: "Test Course")
courses.first
courses.count
course_name
courses.find_index("#{course_name}")
courses.find_index["#{course_name}"]
c
courses.count
c
exit
CanvasFaker::Functionality.get_account_id
CanvasFaker.constants::Functionality.get_account_id
CanvasFaker.constants::Functionality
CanvasFaker.constants
CanvasFaker
exit
courses_names.find_index("#{course_name}")
courses_names.find_index(course_name)
courses_names.find_index("course_name")
c
use_old_course
exit
courses_names.find_index("Test Course")
courses_names.find_index(1)
courses_names.find_index(2)
courses_names.find("Test Course")
courses_names.first
courses_names.methods
courses
c
exit
a=courses_names.include?(cn)
a=courses_names.includes(cn)
a=courses_names.includes?(cn)
a=courses_names.any?
a=courses_names.any?(cn)
a.class
a
a=courses_names.find(cn)
courses_names.find(cn)
courses_names.methods
cn = "Test Course"
courses_names
course_names
exit
a= courses.map{|course| course["name"]}
courses
c
courses_names = course_list.map{|course| course["name"]}
exit
c
exit
LMS::API
LMS.constants
LMS::Canvas
LMS
LMS.class
LMS.methods.sort
LMS.methods
LMS.methods?
LMS
LMS::CanvasApi
LMS
LM
c
exit
ex
n
ENV["CANVAS_TOKEN"]
ENV["APP_DEFAULT_CANVAS_URL"]
exit
t
args
exit
args
ARGS[1]
ARGs[1]
ARG[1]
args
exit
i
params
ARG[1]
exit
c
courses[course]["id"].class
courses[course]["id"]
courses[course]["name"]
courses[course]
